---

- name: "Ensure Docker Nodes"
  hosts: proxmox_hosts
  roles:
    # Manager VM
    - role: proxmox-infra-cloudinit-vm
      when: "ansible_play_hosts_all.index(inventory_hostname) < 5"
      vars:
        vm:
          name: "manager{{ ansible_play_hosts_all.index(inventory_hostname) }}.docker.vm.netsoc.co"
          clone: "netsoc-ubuntu-server-{{ inventory_hostname }}"
          timeout: 300
          description: |
            groups:
              - vm
              - docker
              - docker_managers
            vars:
              ansible_ssh_private_key_file: "/root/NaC-repo/keys/docker/id_rsa"
          net:
            net0: "virtio,bridge=vmbr0,tag=30"
          resize_disks:
            virtio0: "+5G"
          cores: 4
          memory: 4096
        cloudinit:
          metadata: ""
          userdata: |
            #cloud-config
            users:
              - name: netsoc
                gecos: Netsoc Management User
                primary_group: netsoc
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_authorized_keys:
                  - {{ ssh_key_sig }}
            preserve_hostname: false
            manage_etc_hosts: true
            fqdn: manager{{ ansible_play_hosts_all.index(inventory_hostname) }}.docker.vm.netsoc.co
          networkconfig: |
            version: 2
            ethernets:
              30:
                match:
                  name: "en*"
                addresses:
                  - {{ ip_allocation.docker_manager_base | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}/24
                gateway4: 10.0.30.1
                nameservers:
                  search: {{ ip_allocation.search }}
                  addresses: {{ ip_allocation.nameservers }}
        wait_for_ssh: "{{ ip_allocation.docker_manager_base | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}"
    # Worker VM
    - role: proxmox-infra-cloudinit-vm
      vars:
        vm:
          name: "worker{{ ansible_play_hosts_all.index(inventory_hostname) }}.docker.vm.netsoc.co"
          clone: "netsoc-ubuntu-server-{{ inventory_hostname }}"
          timeout: 300
          description: |
            groups:
              - vm
              - docker
              - docker_workers
            vars:
              ansible_ssh_private_key_file: "/root/NaC-repo/keys/docker/id_rsa"
          net:
            net0: "virtio,bridge=vmbr0,tag=30"
          resize_disks:
            virtio0: "+5G"
          cores: 4
          memory: 4096
        cloudinit:
          metadata: ""
          userdata: |
            #cloud-config
            users:
              - name: netsoc
                gecos: Netsoc Management User
                primary_group: netsoc
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_authorized_keys:
                  - {{ ssh_key_sig }}
            preserve_hostname: false
            manage_etc_hosts: true
            fqdn: worker{{ ansible_play_hosts_all.index(inventory_hostname) }}.docker.vm.netsoc.co
          networkconfig: |
            version: 2
            ethernets:
              30:
                match:
                  name: "en*"
                addresses:
                  - {{ ip_allocation.docker_worker_base | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}/24
                gateway4: 10.0.30.1
                nameservers:
                  search: {{ ip_allocation.search }}
                  addresses: {{ ip_allocation.nameservers }}
        wait_for_ssh: "{{ ip_allocation.docker_worker_base | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}"
  vars:
    ssh_key_sig: "{{ lookup('file', './keys/docker/id_rsa.pub') }}"
  vars_files:
    - vars/ip_allocation.yml
    - vars/proxmox.yml
    - vars/secrets.yml

- name: "Reload inventory to pull new VMs"
  hosts: 127.0.0.1
  connection: local
  tasks:
    - meta: refresh_inventory

- import_playbook: "provision-docker-nodes.yml"