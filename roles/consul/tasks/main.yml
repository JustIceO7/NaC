---

- name: Ensure /netsoc-neo/docker-data/consul created with 0700
  become: yes
  file:
    path: /netsoc-neo/docker-data/consul
    owner: netsoc
    group: netsoc
    mode: 0700 # drwx----
    state: directory

- name: "Ensure Consul cluster"
  become: yes
  docker_stack:
    state: present
    name: consul
    compose: 
      - version: '3.5'
        services:
          server_leader:
            hostname: consul_{{ inventory_hostname }}
            container_name: consul_server_leader
            image: consul:latest
            networks:
              - consul
            #temp disabled until ACLS
            #ports:
              # - "8400:8400"
              # - "8500:8500"
              # - "8600:8600"
              # - "8600:8600/udp"
            # Bootstrap the cluster once 3 servers (this + 2 more) are available
            command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          server_replica:
            hostname: consul_{{ inventory_hostname }}
            image: consul:latest
            container_name: consul_server_replica
            networks:
              - consul
            # Join the server to  consul cluster (to the bootstrap server above)
            command: "agent -server -retry-join consul_server_bootstrap -client 0.0.0.0"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname != {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          client_agent:
            hostname: consul_{{ inventory_hostname }}
            image: consul:latest
            container_name: consul_client_agent
            networks:
              - consul
            # Join the agent to consul cluster (to the bootstrap server above)
            command: "agent -retry-join consul_server_bootstrap -client 0.0.0.0"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role != manager
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
        networks:
          consul:
            driver: overlay
            attachable: true 