---

- name: Ensure /netsoc-neo/docker-data/consul created with 0700
  become: yes
  file:
    path: /netsoc-neo/docker-data/consul
    owner: netsoc
    group: netsoc
    mode: 0700 # drwx----
    state: directory

- name: Ensure Consul network
  become: yes
  docker_network:
    name: consul
    driver: overlay
    attachable: yes
    ipam_config:
    - subnet: 10.0.1.0/26
      iprange: 10.0.1.0/27

- name: "Ensure Consul cluster"
  become: yes
  docker_stack:
    state: present
    name: consul
    compose: 
      - version: '3.5'
        services:
          server_leader:
            hostname: server-leader
            container_name: consul_server_leader
            image: consul:1.6.1
            networks:
              consul:
                ipv4_address: '10.0.1.3'
            ports:
              - target: 8500
                published: 8500
                protocol: tcp
                mode: host
              - "8301:8301"
            # Bootstrap the cluster once 3 servers (this + 2 more) are available
            command: agent -server -bootstrap-expect 3 -client 0.0.0.0 -bind {% raw %}'{{ GetInterfaceIP "eth0" }}'{% endraw %} -ui
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          server_replica:
            hostname: server-replica-{% raw %}{{.Node.Hostname}}{% endraw %}
            image: consul:1.6.1
            container_name: consul_server_{% raw %}{{.Node.Hostname}}{% endraw %}
            networks:
              - consul                         
            # Join the server to  consul cluster (to the bootstrap server above)
            command: agent -server -retry-join 10.0.1.3 -client 0.0.0.0 -bind {% raw %}'{{ GetInterfaceIP "eth0" }}'{% endraw %}
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            depends_on:
              - server_leader      
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname != {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          client_agent:
            hostname: client-agent
            image: consul:1.6.1
            container_name: consul_client_agent
            networks:
              - consul
            # Join the agent to consul cluster (to the bootstrap server above)
            command: agent -retry-join 10.0.1.3 -client 0.0.0.0 -bind {% raw %}'{{ GetInterfaceIP "eth0" }}'{% endraw %}
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            depends_on:
              - server_leader
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role != manager
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
        networks:
          consul:
            external: true