---
- name: "Ensure Consul cluster"
  vars:
    server_bootstrap_cmd: !unsafe 'agent -server -bootstrap-expect 3 -ui -client 0.0.0.0'
    server_cmd: !unsafe 'agent -server -retry-join consul_server_bootstrap -client 0.0.0.0'
    agent_cmd: !unsafe 'agent -retry-join consul_server_bootstrap -client 0.0.0.0'
  become: yes
  docker_stack:
    state: present
    name: consul
    compose: 
      - version: '3.5'
        services:
          server_bootstrap:
            container_name: consul_server_bootstrap
            image: consul:latest
            networks:
              - consul
            ports:
              - "8400:8400"
              - "8500:8500"
              - "8600:8600"
              - "8600:8600/udp"
            # Bootstrap the cluster once 3 servers (this + 2 more) are available
            # escaped {{ and }} here
            # https://docs.ansible.com/ansible/latest/user_guide/playbooks_advanced_syntax.html
            # actual command executed:
            # "agent -server -bootstrap-expect 3 -ui -client-bind='{{ GetInterfaceIP "eth0" }}'"
            command: "{{ server_bootstrap_cmd }}"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          server:
            image: consul:latest
            networks:
              - consul
            # Join the server to  consul cluster (to the bootstrap server above)
            command: "{{ server_cmd }}"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname != {{ inventory_hostname }}
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3

          agent:
            image: consul:latest
            networks:
              - consul
            # Join the agent to consul cluster (to the bootstrap server above)
            command: "{{ agent_cmd }}"
            environment:
              - CONSUL_BIND_INTERFACE=eth0
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role != manager
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3


        networks:
          consul:
            driver: overlay
            attachable: true 