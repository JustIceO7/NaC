---

- name: Ensure /netsoc-neo/docker-data/traefik created with 0775
  become: yes
  file:
    path: /netsoc-neo/docker-data/traefik
    owner: root
    group: root
    mode: 0775
    state: directory

- name: Ensure /netsoc-neo/docker-data/traefik/dynamic_config created with 0775
  become: yes
  file:
    path: /netsoc-neo/docker-data/traefik/dynamic_config
    owner: root
    group: root
    mode: 0775
    state: directory

- name: Sync files for /netsoc-neo/docker-data/traefik/dynamic_config/* to /traefik/dynamic_config/"
  become: yes
  synchronize:
    src: files/dynamic_config/
    dest: /netsoc-neo/docker-data/traefik/dynamic_config/
    perms: no # Don't preserve permissions
    delete: yes # Remove files that do not exist in src from dest
    recursive: true
  # copy:
  #   src: "{{ item.src }}"
  #   dest: "/netsoc-neo/docker-data/traefik/dynamic_config/{{ item.path }}"
  #   owner: root
  #   group: root
  #   mode: "{{ item.mode }}"
  #   backup: yes
  # with_filetree:
  #   - files/dynamic_config
  # when: item.state == "file"


- name: Copy Traefik Static Config
  become: yes
  copy:
    src: files/static_config.toml
    dest: /netsoc-neo/docker-data/traefik/static_config.toml

- name: Ensure Cloudflare DNS token in Docker Swarm Secrets
  run_once: true
  become: yes
  docker_secret:
    name: cloudflare_dns_api_token.txt
    data: "{{ cloudflare_dns_api_token }}"
  register: result
  ignore_errors: true

- name: Remove Consul Config Secret from Swarm Service to update the Secret
  become: yes
  docker_stack:
    state: absent
    absent_retries: 5
    name: cloudflare_dns_api_token.txt
  when: result is failed

- name: Retry setting Consul Config in Docker Swarm Secrets if necessary
  run_once: true
  when: result is failed
  become: yes
  docker_secret:
    name: cloudflare_dns_api_token.txt
    data: "{{ cloudflare_dns_api_token }}"


- name: Ensure Traefik Docker network
  become: yes
  docker_network:
    name: traefik
    driver: overlay
    attachable: yes

- name: Ensure Traefik Docker container
  become: yes
  docker_stack:
    state: present
    name: traefik
    compose:
      - version: "3.5"
        services:
          server:
            image: traefik:2.0.2
            ports:
              - target: 8080
                published: 1339
                protocol: tcp
                mode: host
              - target: 80
                published: 81
                protocol: tcp
                mode: host
              - target: 443
                published: 444
                protocol: tcp
                mode: host
            networks:
              traefik:
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
                preferences:
                  - spread: node.id
              restart_policy:
                condition: on-failure
                delay: 2s
                max_attempts: 1
              labels:
                # https://community.containo.us/t/global-http-to-https-redirect-in-v2/1658/3
                #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                # global redirect to https
                - "traefik.enable=true"
                - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
                - "traefik.http.routers.redirs.entrypoints=web"
                - "traefik.http.routers.redirs.middlewares=redirectToHttps"
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - /netsoc-neo/docker-data/traefik/:/traefik/
            command: traefik --configFile=/traefik/static_config.toml
            secrets:
              - "cloudflare_dns_api_token.txt"
            environment:
              CLOUDFLARE_DNS_API_TOKEN_FILE: "/run/secrets/cloudflare_dns_api_token.txt"
          whoami:
            deploy:
              mode: global
              placement:
                constraints:
                  # - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
                preferences:
                  - spread: node.id
              restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 1
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.whoami.rule=Host(`whoami.netsoc.dev`)"
                - "traefik.http.routers.whoami.entrypoints=web-secure"
                - "traefik.http.routers.whoami.tls.certResolver=letsencrypt"
                - "traefik.http.services.whoami-service.loadbalancer.server.port=80"
                - "traefik.http.routers.whoami.service=whoami-service"
                - "traefik.docker.network=traefik"
            image: "containous/whoami"
            # container_name: "simple-service"
            networks:
              traefik:
        secrets:
          cloudflare_dns_api_token.txt:
            external: true
        networks:
          traefik:
            external: true