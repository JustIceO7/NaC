---

- name: Ensure Traefik Docker network
  become: yes
  docker_network:
    name: traefik
    driver: overlay
    attachable: yes
    
- name: Ensure Traefik Docker container
  become: yes
  docker_stack:
    state: present
    name: traefik
    compose:
      - version: "3.5"
        services:
          traefik:
            image: traefik:2.0.2
            ports:
              - target: 8080
                published: 1337
                protocol: tcp
                mode: host
              - target: 80
                published: 81
                protocol: tcp
                mode: host
              - target: 443
                published: 444
                protocol: tcp
                mode: host
            networks:
              traefik:
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
                preferences:
                  - spread: node.id
              restart_policy:
                condition: on-failure
                delay: 19999s
                max_attempts: 1
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
            command: >
              --log.level="DEBUG"
              --entrypoints.web.address=:80
              --providers.docker=true
              --providers.docker.swarmMode=true
              --providers.docker.exposedbydefault=false
              --serverstransport.insecureskipverify=true 
              --api=true
              --api.dashboard=true
              --api.insecure=true
          whoami:
            deploy:
              mode: global
              placement:
                constraints:
                  # - node.role == manager
                  - node.hostname == {{ inventory_hostname }}
                preferences:
                  - spread: node.id
              restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 1
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.whoami.rule=Host(`whoami.netsoc.dev`)"
                - "traefik.http.routers.whoami.entrypoints=web"
                - "traefik.http.services.whoami-service.loadbalancer.server.port=80"
                - "traefik.http.routers.whoami.service=whoami-service"
                - "traefik.docker.network=traefik"
            image: "containous/whoami"
            # container_name: "simple-service"
            networks:
              traefik:
        networks:
          traefik:
            external: true