---
- name: "Setup DNS"
  hosts: 127.0.0.1
  connection: local
  vars_files:
    - vars/cloudflare.yml
  tasks:
    - import_tasks: dns.yml
  tags:
    - install-base
    - install-services
  
- name: "Ensure base install"
  hosts: all

  # Assume we're doing a completely new install from a fresh server
  # Fact gathering requires python, which the server may not have
  gather_facts: no
  
  roles:
    - ansible-requirements  # Installs python2.7, 3 and then gathers facts
    # - ubuntu-universe     # Ubuntu community repos. Uncomment when every server is on 18.04
    - essential-utils       # pip, iotop, htop, git, node, etc...
    - netsoc-neo-dir        # Set's up /netsoc-neo/ for storing our central files
    - paramiko-fix          # Fixes: # https://github.com/paramiko/paramiko/pull/1311
                            # Remove and upgrade paramiko when this is merged
    - shells
    - fail2ban
    - docker                # Docker APT, Docker, etc...
    - apt-autoremove        # Clean up any unused deps
  tags:
    - install-base
    - install-packages

- name: "Ensure Docker Swarm created" 
  hosts: swarm_creators
  roles:
    - docker-swarm-create
  tags:
    - install-base
    - install-swarm

- name: "Ensure Docker Swarm managers enrolled"
  hosts: swarm_managers
  roles:
    - docker-swarm-enroll-manager
  vars:
    swarm_creator: "{{ groups['swarm_creators'][0] }}"
  tags:
    - install-base
    - install-swarm

- name: "Ensure Docker Swarm workers enrolled"
  hosts: swarm_workers
  roles:
    - docker-swarm-enroll-worker
  vars:
    swarm_creator: "{{ groups['swarm_creators'][0] }}"
  tags:
    - install-base
    - install-swarm

# Despite only being ran on one host (the swarm_creators group), the below docker-composes have deploy: directives
# that will put each service onto every machine
- name: "Setup Swarm Services (Portainer Agent, Consul, Traefik)"
  hosts: swarm_creators
  roles:
    - portainer-agent
    - consul
  tags:
    - install-base
    - install-swarm

- name: "Ensure Traefik (non-SSL edition for feynman)"
  hosts: feynman
  roles:
    - traefik-feynman
  tags:
    - install-base
    - install-services 
    - traefik

- name: "Setup Portainer (feynman)"
  hosts: feynman
  roles:
    - portainer
  vars:
    portainer_traefik_host_rule: "feyn-portainer.netsoc.dev"
  tags:
    - install-base
    - install-services

- name: "Setup FreeIPA Server (feynman)" 
  hosts: feynman
  roles:
    - freeipa-server-feynman
  vars:
    ipa_realm: NETSOC.DEV
    ipa_server_hostname: feyn-ipa.netsoc.dev
    ipa_traefik_host_rule: feyn-ipa.netsoc.dev
  vars_files:
    - vars/freeipa.yml  # passwords
  tags:
    - install-freeipa-server

- name: "Setup FreeIPA Clients (feynman)"
  hosts: feynman
  roles:
    - freeipa-client
  vars:
    ipa_realm: NETSOC.DEV
    ipa_domain: netsoc.dev
    ipa_server_hostname: feyn-ipa.netsoc.dev
    ipa_client_hostname: "{{ inventory_hostname }}.netsoc.dev"
  vars_files:
    - vars/freeipa.yml  # passwords
  tags:
    - install-freeipa-clients

